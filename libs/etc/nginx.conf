user  web;
#worker_processes  1;
worker_processes auto;
worker_cpu_affinity auto;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#error_log  logs/error.log  debug;
error_log   logs/error.log  crit;
pid        logs/nginx.pid;


events {
    use epoll;
    worker_connections  51200;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    server_tokens off;
    server_tag off;
    server_info off;
    charset  UTF-8;
    keepalive_timeout  10;
    tcp_nodelay on;
    sendfile on;
    fastcgi_intercept_errors on;
    server_names_hash_bucket_size 128;
    large_client_header_buffers 4 32k;
    client_body_temp_path   tmp/client_body_temp 1 2;
    proxy_temp_path         tmp/proxy_temp 1 2;
    fastcgi_temp_path       tmp/fastcgi_temp 1 2;
    scgi_temp_path          tmp/scgi_temp 1 2;
    uwsgi_temp_path         tmp/uwsgi_temp 1 2;
    client_body_in_file_only off;
    client_body_buffer_size 16k;
    client_body_timeout 60;
    client_header_buffer_size 32k;
    client_header_timeout 60;
    client_max_body_size 8m;

    gzip  on;
    gzip_min_length  1k;
    gzip_buffers     4 16k;
    gzip_http_version 1.0;
    gzip_comp_level 4;
    gzip_types       text/plain application/x-javascript text/css application/xml;
    gzip_vary on;
    gzip_disable     "MSIE [1-6] \.";
    limit_req_zone $binary_remote_addr zone=req_one:10m rate=10r/s;
    limit_req_zone $http_user_agent zone=useragenttrack:10m rate=10r/s;
    log_format  access  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    log_format  hostaccess  '$remote_addr - $remote_user [$time_local] $host "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" $http_x_forwarded_for';
    access_log off;
    #access_log  logs/access.log  access;

    #tcp_nopush     on;

    lua_package_path "/server/tengine/conf/ngx_lua/?.lua";
    lua_shared_dict limit 10m;
    lua_code_cache on;
    init_by_lua_file  /server/tengine/conf/ngx_lua/waf/init.lua;
    access_by_lua_file /server/tengine/conf/ngx_lua/waf/waf.lua;    
    include upstream_backend.conf;
    include vhost/vhost_*.conf;
#    server {
#        listen       80;
#        server_name  localhost;

#        #charset koi8-r;

#        #access_log  logs/host.access.log  main;

#        location / {
#            root   html;
#            index  index.html index.htm;
#        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
#        error_page   500 502 503 504  /50x.html;
#        location = /50x.html {
#            root   html;
#        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
#    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
